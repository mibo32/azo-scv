# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  name: AksServices

# pool:
#   vmImage: 'windows-latest'
steps:
- checkout: self
# - script: |
#     docker run --name scan-curity -t ictu/zap2docker-weekly zap-baseline.py -I -j -t https://identity-dev.carnegie.se -r testreport-api.html -x OWASP-ZAP-Report.xml
#     docker cp scan-curity:/zap/wrk/ $(Agent.TempDirectory) 
#     docker stop scan-curity
#     docker container rm scan-curity
#   displayName: 'Run a multi-line script'

# - task: PublishTestResults@2
#   inputs:
#     testResultsFormat: 'NUnit'
#     testResultsFiles: '$(Build.ArtifactStagingDirectory)/Converted-OWASP-ZAP-Report.xml'
#     # searchFolder: '$(Build.ArtifactStagingDirectory)/testresults'
#     failTaskOnFailedTests: true
# - task: PublishPipelineArtifact@1
#   inputs:
#     targetPath: '$(Agent.TempDirectory)/wrk'
#     artifact: 'owaspresults'
#     publishLocation: 'pipeline'
- task: PowerShell@2
  displayName: test
  inputs:
    targetType: inline
    script: |
      az extension add --name azure-devops
      $AzureDevOpsProjectName = "Infrastructure"
      $connectionName = "mibo-conn"
      $AzureDevOpsOrganizationUrl = "https://dev.azure.com/carnegieinvestmentbank"
      az config set extension.use_dynamic_install=yes_without_prompt
      az devops configure --defaults organization="$AzureDevOpsOrganizationUrl" project="$AzureDevOpsProjectName"
      az devops service-endpoint create --service-endpoint-configuration ./svc.json
  env:
    AZURE_DEVOPS_EXT_PAT: $(pat)